{"version":3,"sources":["components/DropDown.js","components/FilterMenu.js","components/Login.js","components/Table.js","components/TableControls.js","App.js","reportWebVitals.js","index.js"],"names":["DropDown","props","className","options","events","selectedValues","displayedEvents","onSelect","list","item","addEvent","onRemove","removeEvent","displayValue","style","showCheckbox","isObject","hidePlaceholder","Date","Login","start","onSubmit","login","for","class","type","onChange","e","handleSetPass","target","value","Table","useState","sortEvents","setSortEvents","loading","color","height","width","onClick","sortByName","data","map","line","index","app","getDate","day","sortAppEvents","handleSort","event","changeName","TableControls","head","resetEvents","clearEvents","addAll","tart","today","Math","floor","now","API_KEY","process","DEFAULT_EVENTS","App","setStart","setData","order","pass","setPass","setEvents","setDisplayedEvents","setEventsObject","setLoading","apps","setApps","displayedApps","setDisplayedApps","displayedData","setdisplayedData","ogData","setOgData","getApps","d","newApps","exists","i","length","j","console","log","updateDispalyedData","resetApps","newDispData","logout","a","reportsArr","getDataFromLambda","lambdaReport","sortRep","getEvents","fetch","then","json","eventsNames","isNew","sort","eventsArr","newArr","label","handleObjectEvents","arr","day1","day2","getData","alert","p","newDispApps","newData","b","toLowerCase","tmp","n","nameMap","PaymentSheetView_appear_NATIVE","app_launch_NATIVE","app_launch_SDK","approve_NATIVE","approve_SDK","fail_NATIVE","fail_SDK","pop_SDK","purchase_NATIVE","purchase_SDK","first_launch","toLocaleDateString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba56287d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport DropdownTreeSelect from 'react-dropdown-tree-select'\r\n\r\n\r\n\r\n\r\nexport default function DropDown(props) {\r\n    const addEvent = (list, item) => {\r\n        \r\n            props.addEvent(item);\r\n\r\n        \r\n    }\r\n    const removeEvent = (list,item) =>{\r\n        props.removeEvent(item);\r\n    }\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <Multiselect className=\"drop-down\"\r\n                options={props.events} // Options to display in the dropdown\r\n                selectedValues={props.displayedEvents} // Preselected value to persist in dropdown\r\n                onSelect={addEvent} // Function will trigger on select event\r\n                onRemove={removeEvent} // Function will trigger on remove event\r\n                displayValue=\"label\" // Property name to display in the dropdown options\r\n                style={ \"max-width:400px\" }\r\n                showCheckbox={true}\r\n                isObject={false}\r\n                hidePlaceholder={false} \r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport DropDown from './DropDown';\r\n\r\nvar today = new Date();\r\nexport default function FilterMenu(props) {\r\n    const [event, setEvent] = useState(\"\")\r\n    let x = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n    // console.log(x);\r\n    const addEvent = (e) => {\r\n        e.preventDefault();\r\n        if (event === \"\" || event === \"- - Choose Event - -\") {\r\n\r\n        } else {\r\n            props.addEvent(event);\r\n\r\n        }\r\n    }\r\n\r\n    const resetEvents = (e) => {\r\n        e.preventDefault();\r\n        props.resetEvents();\r\n    }\r\n\r\n    const clear = (e) => {\r\n        e.preventDefault();\r\n        props.clear();\r\n    }\r\n    if (props.start) {\r\n        return (\r\n            <div>\r\n                <form class=\"form-inline\">\r\n                    <div class=\"input-group mb-3\">\r\n\r\n                        <select class=\" custom-select\" id=\"eventselect\" onChange={(e) => { setEvent(e.target.value) }}>\r\n                            <option selected>- - Choose Event - -</option>\r\n\r\n                            {props.events.map((event) => {\r\n                                return (\r\n\r\n                                    <option value={event}>   {event} </option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n\r\n\r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"input-group-text btn btn-secondary\" for=\"eventselect\" onClick={addEvent}>Add Event</button>\r\n\r\n                        </div>\r\n                            \r\n\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                    {/* <label for=\"start\">Start date:</label>\r\n\r\n                    <input className=\"date\" type=\"date\" id=\"start\" name=\"trip-start\"\r\n                        min=\"2020-09-26\" max={today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate()} /> */}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Login(props) {\r\n   \r\n\r\n    if (!props.start) {\r\n        return (\r\n            <form onSubmit={() => { props.login() }} className=\"form-box\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n\r\n                <input class=\"form-control\" type=\"password\" onChange={(e) => props.handleSetPass(e.target.value)} />\r\n                <br />\r\n                <button class=\"btn btn-primary mb-2 show-rep-btn\" > show reports</button>\r\n            </form>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/* <button class=\"btn btn-primary mb-2\" onClick={() => { props.logout() }}> Back</button> */}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\n\r\nexport default function Table(props) {\r\n\r\n    const [sortEvents, setSortEvents] = useState(false)\r\n\r\n    const handleSort = (line) => {\r\n        props.sortAppEvents(line)\r\n        setSortEvents(!sortEvents);\r\n    }\r\n\r\n    const handleSortByName = () =>{\r\n        props.sortByName(); \r\n        setSortEvents(!sortEvents);\r\n    }\r\n    \r\n\r\n    if (props.loading) {\r\n        return (\r\n            <div className=\"loading\">\r\n                <ReactLoading type={'spin'} color={\"blue\"} height={'80px'} width={'80px'} />\r\n            </div>\r\n        );\r\n    } else if (props.start) {\r\n        return (\r\n            <div className=\"table-box\">\r\n\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr >\r\n                            <th className=\"ver-th blank-cell\" > <button className=\"btn\" onClick={() => { handleSortByName()}}>⌄</button> </th>\r\n                            {\r\n                                props.data.map((line, index) => {\r\n                                    return (\r\n                                        <th>{line.app}    <span className=\"time\"> {props.getDate(line.day, index)} </span><button className=\"btn\" onClick={() => { handleSort(line) }}>⌄</button>\r\n                                        </th>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {props.events.map((event) => {\r\n                        return (\r\n                            <tr>\r\n\r\n                                <th className=\"ver-th\"     ><span className=\"test\">{props.changeName(event)}</span></th>\r\n                                {\r\n                                    props.data.map((line, index) => {\r\n                                        return (\r\n                                            <td>{line[event] || \"n/a\"}</td>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        );\r\n                    })\r\n\r\n                    }\r\n\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n            </div>)\r\n    }\r\n}\r\n","import React from 'react'\r\nimport DropDown from './DropDown'\r\n\r\nexport default function TableControls(props) {\r\n    if (props.start && !props.loading ) {\r\n        return (\r\n            \r\n            <div className=\"table-controls\">\r\n            <h3>{props.head}</h3>\r\n                <button className=\"btn btn-secondary reset-button\" onClick={props.resetEvents}>Reset</button>\r\n                <button className=\"btn btn-danger reset-button\" onClick={props.clearEvents}>Clear All</button>\r\n                <button className=\"btn btn-primary reset-button\" onClick={props.addAll}>Add All</button>\r\n\r\n                <DropDown start={props.tart} loading={props.loading} removeEvent={props.removeEvent} addEvent={props.addEvent} events={props.events} displayedEvents={props.displayedEvents} events={props.events} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\nimport DropDown from './components/DropDown';\r\nimport FilterMenu from './components/FilterMenu';\r\nimport Login from './components/Login';\r\nimport Table from './components/Table';\r\nimport TableControls from './components/TableControls';\r\n\r\n\r\nconst today = Math.floor(Date.now() / 86400000);\r\nconst API_KEY = process.env.REACT_APP_DATA_API_KEY;\r\nconst PASS_KEY = process.env.REACT_APP_PASS_KEY;\r\nconst DEFAULT_EVENTS = [\"PaymentSheetView_appear_NATIVE\", \"app_launch_NATIVE\", \"app_launch_SDK\", \"approve_NATIVE\", \"approve_SDK\", \"fail_NATIVE\", \"fail_SDK\", \"pop_SDK\", \"purchase_NATIVE\", \"purchase_SDK\", \"first_launch\"];\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [start, setStart] = useState(false)\r\n  const [data, setData] = useState([])\r\n  const [order, setOrder] = useState('htl')\r\n  const [pass, setPass] = useState('')\r\n  const [events, setEvents] = useState([])\r\n  const [displayedEvents, setDisplayedEvents] = useState(DEFAULT_EVENTS)\r\n  const [eventsObject, setEventsObject] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [apps, setApps] = useState([])\r\n  const [displayedApps, setDisplayedApps] = useState([])\r\n  const [displayedData, setdisplayedData] = useState([])\r\n  const [ogData, setOgData] = useState([])\r\n\r\n  const resetEvents = () => {\r\n    setDisplayedEvents(DEFAULT_EVENTS);\r\n  }\r\n  const clearEvents = () => {\r\n    setDisplayedEvents([]);\r\n  }\r\n\r\n  const getApps = (d) => {\r\n    let newApps = [];\r\n    let exists = false;\r\n    for (let i = 0; i < d.length; i++) {\r\n      for (let j = 0; j < newApps.length; j++) {\r\n        if (d[i].app === newApps[j]) {\r\n          exists = true;\r\n          break;\r\n        }\r\n\r\n      }\r\n      if (!exists)\r\n        newApps = [...newApps, d[i].app];\r\n      exists = false;\r\n    }\r\n    console.log(newApps);\r\n    setApps(newApps);\r\n    setDisplayedApps(newApps);\r\n    updateDispalyedData(d);\r\n\r\n  }\r\n  const resetApps = () => {\r\n    setData(ogData);\r\n    getApps(ogData);\r\n  }\r\n  const updateDispalyedData = () => {\r\n\r\n    let newDispData = []\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let j = 0; j < displayedApps.length; j++) {\r\n        if (data[i].app === displayedApps[j]) {\r\n          newDispData = [...newDispData, data[i]]\r\n        }\r\n      }\r\n    }\r\n    setdisplayedData(newDispData);\r\n    console.log(displayedData);\r\n  }\r\n  const removeApp = (app) => {\r\n    let newDispApps = [];\r\n    for (let i = 0; i < displayedApps.length; i++) {\r\n      if (displayedApps[i] === app) {\r\n        continue;\r\n      } else {\r\n        newDispApps = [...newDispApps, displayedApps[i]];\r\n      }\r\n    }\r\n    setDisplayedApps(newDispApps);\r\n    let newData = []\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].app === app)\r\n        continue;\r\n      else\r\n        newData = [...newData, data[i]];\r\n    }\r\n    setData(newData);\r\n  }\r\n  const clearApps = () => {\r\n\r\n    setData([]);\r\n    setDisplayedApps([]);\r\n  }\r\n  const addApp = (app) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].app === app)\r\n        return\r\n    }\r\n    let newData = []\r\n    for (let i = 0; i < data.length; i++) {\r\n      newData = [...newData, data[i]]\r\n      \r\n    }\r\n    for (let i = 0; i < ogData.length; i++) {\r\n      if(ogData[i].app === app){\r\n        newData = [...newData, ogData[i]];\r\n      }\r\n    }\r\n    sortRep(newData);\r\n\r\n    setData(newData)\r\n\r\n    setDisplayedApps([...displayedApps, app]);\r\n  }\r\n\r\n  const checkIfChecked = (event) => {\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (event === displayedEvents[i])\r\n        return true\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const sortByName = () => {\r\n    // displayedEvents.sort();\r\n\r\n    displayedEvents.sort(\r\n      function (a, b) {\r\n        if (a.toLowerCase() < b.toLowerCase()) return -1;\r\n        if (a.toLowerCase() > b.toLowerCase()) return 1;\r\n        return 0;\r\n      }\r\n    );\r\n    setDisplayedEvents(displayedEvents);\r\n    console.log(displayedEvents);\r\n\r\n\r\n  }\r\n  const changeName = (n) => {\r\n\r\n    let nameMap = {\r\n      PaymentSheetView_appear_NATIVE: \"Pop Native\",\r\n      app_launch_NATIVE: \"App Launch Native\",\r\n      app_launch_SDK: \"App Launch SDK\",\r\n      approve_NATIVE: \"Approve Native\",\r\n      approve_SDK: \"Approve SDK\",\r\n      fail_NATIVE: \"Fail Native\",\r\n      fail_SDK: \"Fail SDK\",\r\n      pop_SDK: \"Pop SDK\",\r\n      purchase_NATIVE: \"Purchase Native\",\r\n      purchase_SDK: \"Purchase SDK\",\r\n      first_launch: \"Fisrt Launch\"\r\n    }\r\n\r\n    if (!nameMap[n]) {\r\n      return n;\r\n    } else {\r\n      return nameMap[n] + \" (\" + n + \")\";\r\n    }\r\n    return nameMap[n] || n;\r\n  }\r\n\r\n  const sortAppByValue = (app) => {\r\n    let tmp = \"\";\r\n    if (true) {\r\n      for (let j = 0; j < displayedEvents.length; j++) {\r\n        for (let i = 0; i < displayedEvents.length - 1; i++) {\r\n          if (app[displayedEvents[i]] < app[displayedEvents[i + 1]] || !app[displayedEvents[i]]) {\r\n            tmp = displayedEvents[i];\r\n            displayedEvents[i] = displayedEvents[i + 1];\r\n            displayedEvents[i + 1] = tmp;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let j = 0; j < displayedEvents.length; j++) {\r\n        for (let i = 0; i > displayedEvents.length - 1; i++) {\r\n          if (app[displayedEvents[i]] < app[displayedEvents[i + 1]] || !app[displayedEvents[i + 1]]) {\r\n            tmp = displayedEvents[i];\r\n            displayedEvents[i] = displayedEvents[i + 1];\r\n            displayedEvents[i + 1] = tmp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setDisplayedEvents(displayedEvents);\r\n  }\r\n\r\n  const login = () => {\r\n    if (pass === PASS_KEY) {\r\n      getData();\r\n      setStart(true);\r\n    } else {\r\n      alert(\"wrong passowrd\");\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    setStart(false);\r\n    setLoading(false);\r\n    setPass(\"\");\r\n  }\r\n\r\n  const handleSetPass = (p) => {\r\n    setPass(p)\r\n  }\r\n\r\n  async function getData() {\r\n\r\n    let reportsArr = [];\r\n    setLoading(true);\r\n    let lambdaReport = await getDataFromLambda()\r\n    setLoading(false);\r\n    // console.log(lambdaReport)\r\n\r\n    lambdaReport.map((line) => {\r\n      reportsArr = [...reportsArr, line]\r\n    })\r\n    sortRep(reportsArr);\r\n    // daysCheck();\r\n    // console.log(reportsArr);\r\n\r\n    setData(reportsArr);\r\n    setOgData(reportsArr);\r\n    getApps(reportsArr);\r\n    getEvents(reportsArr);\r\n\r\n\r\n\r\n  }\r\n  async function getDataFromLambda() {\r\n    return fetch(API_KEY)\r\n      .then(data => data.json())\r\n  }\r\n  const handleObjectEvents = (eventsArr) => {\r\n    let newArr = []\r\n    for (let i = 0; i < eventsArr.length; i++) {\r\n      newArr = [...newArr, { label: eventsArr[i], value: eventsArr[i] }]\r\n    }\r\n    setEventsObject(newArr);\r\n  }\r\n  const getEvents = (d) => {\r\n    let eventsNames = [];\r\n    for (let i = 0; i < d.length; i++) {\r\n\r\n      for (var event in d[i]) {\r\n        let isNew = true;\r\n        for (let j = 0; j < eventsNames.length; j++) {\r\n          if (event === eventsNames[j] || d[i].event === null) {\r\n            isNew = false;\r\n          }\r\n        }\r\n        if (isNew) {\r\n          eventsNames = [...eventsNames, event];\r\n        }\r\n      }\r\n    }\r\n    eventsNames.sort();\r\n    setEvents(eventsNames);\r\n    handleObjectEvents(eventsNames)\r\n  }\r\n  function sortRep(arr) {\r\n    if (order === \"lth\") {\r\n      arr.sort((day1, day2) => {\r\n        if (day1.day < day2.day)\r\n          return -1;\r\n        if (day1.day > day2.day)\r\n          return 1;\r\n      });\r\n    } else if (order === \"htl\") {\r\n      arr.sort((day1, day2) => {\r\n        if (day1.day > day2.day)\r\n          return -1;\r\n        if (day1.day < day2.day)\r\n          return 1;\r\n      });\r\n    }\r\n\r\n  }\r\n  const getDate = (day, index) => {\r\n\r\n    if ((today - day) === 0) {\r\n      return \"Today\"\r\n    }\r\n    else if (today - day === 1) {\r\n      return \"Yesterday\"\r\n    }\r\n    else {\r\n      return new Date(day * 86400000).toLocaleDateString()\r\n    }\r\n  }\r\n  const addEvent = (event) => {\r\n    console.log(event);\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (displayedEvents[i] === event)\r\n        return;\r\n    }\r\n\r\n    setDisplayedEvents([...displayedEvents, event]);\r\n  }\r\n  const removeEvent = (event) => {\r\n    let newArr = []\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (displayedEvents[i] === event)\r\n        continue;\r\n      else\r\n        newArr = [...newArr, displayedEvents[i]];\r\n    }\r\n    setDisplayedEvents(newArr);\r\n  }\r\n  const addAll = () => {\r\n    let newArr = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n      if (events[i] === \"app\" || events[i] === \"day\") {\r\n        continue;\r\n      } else {\r\n        newArr = [...newArr, events[i]];\r\n      }\r\n    }\r\n    setDisplayedEvents(newArr);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n        <h1 onClick={() => { logout() }}> Reports</h1>\r\n        <br /> <br />\r\n        <Login login={login} logout={logout} handleSetPass={handleSetPass} start={start} />\r\n\r\n      </div>\r\n      {/* <FilterMenu eventsObject={eventsObject} displayedEvents={displayedEvents} checkIfChecked={checkIfChecked} today={today} start={start} clear={clearEvents} resetEvents={resetEvents} addEvent={addEvent} events={events} />\r\n       */}\r\n      <TableControls head={\"Events\"} resetEvents={resetEvents} clearEvents={clearEvents} addAll={addAll} start={start} loading={loading} removeEvent={removeEvent} addEvent={addEvent} events={events} displayedEvents={displayedEvents} events={events} />\r\n      <TableControls head={\"Apps\"} resetEvents={resetApps} clearEvents={clearApps} addAll={resetApps} start={start} loading={loading} removeEvent={removeApp} addEvent={addApp} events={apps} displayedEvents={displayedApps} />\r\n\r\n      <Table sortByName={sortByName} sortAppEvents={sortAppByValue} loading={loading} changeName={changeName} data={data} getDate={getDate} start={start} events={displayedEvents} />\r\n\r\n\r\n\r\n      <br />\r\n      <br />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}