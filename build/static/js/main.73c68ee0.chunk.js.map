{"version":3,"sources":["components/DropDown.js","components/FilterMenu.js","components/Login.js","components/Table.js","components/TableControls.js","App.js","reportWebVitals.js","index.js"],"names":["DropDown","props","className","options","events","selectedValues","displayedEvents","onSelect","list","item","addEvent","onRemove","removeEvent","displayValue","style","showCheckbox","isObject","hidePlaceholder","Date","Login","start","onSubmit","login","for","class","type","onChange","e","handleSetPass","target","value","Table","useState","sortEvents","setSortEvents","loading","color","height","width","onClick","sortByName","data","map","line","index","app","getDate","day","sortAppEvents","handleSort","event","changeName","TableControls","resetEvents","clearEvents","addAll","tart","today","Math","floor","now","API_KEY","process","DEFAULT_EVENTS","App","setStart","setData","order","pass","setPass","setEvents","setDisplayedEvents","setEventsObject","setLoading","logout","a","reportsArr","getDataFromLambda","lambdaReport","sortRep","console","log","getEvents","fetch","then","json","d","eventsNames","i","length","isNew","j","sort","eventsArr","newArr","label","handleObjectEvents","arr","day1","day2","getData","alert","p","b","toLowerCase","tmp","n","nameMap","PaymentSheetView_appear_NATIVE","app_launch_NATIVE","app_launch_SDK","approve_NATIVE","approve_SDK","fail_NATIVE","fail_SDK","pop_SDK","purchase_NATIVE","purchase_SDK","first_launch","toLocaleDateString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73c68ee0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { render } from \"react-dom\";\r\n\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport DropdownTreeSelect from 'react-dropdown-tree-select'\r\nimport Loading from 'react-loading';\r\n\r\n\r\n\r\n\r\nexport default function DropDown(props) {\r\n    const addEvent = (list, item) => {\r\n        \r\n            props.addEvent(item);\r\n\r\n        \r\n    }\r\n    const removeEvent = (list,item) =>{\r\n        props.removeEvent(item);\r\n    }\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <Multiselect className=\"drop-down\"\r\n                options={props.events} // Options to display in the dropdown\r\n                selectedValues={props.displayedEvents} // Preselected value to persist in dropdown\r\n                onSelect={addEvent} // Function will trigger on select event\r\n                onRemove={removeEvent} // Function will trigger on remove event\r\n                displayValue=\"label\" // Property name to display in the dropdown options\r\n                style={ \"max-width:400px\" }\r\n                showCheckbox={true}\r\n                isObject={false}\r\n                hidePlaceholder={false} \r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport DropDown from './DropDown';\r\n\r\nvar today = new Date();\r\nexport default function FilterMenu(props) {\r\n    const [event, setEvent] = useState(\"\")\r\n    let x = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n    // console.log(x);\r\n    const addEvent = (e) => {\r\n        e.preventDefault();\r\n        if (event === \"\" || event === \"- - Choose Event - -\") {\r\n\r\n        } else {\r\n            props.addEvent(event);\r\n\r\n        }\r\n    }\r\n\r\n    const resetEvents = (e) => {\r\n        e.preventDefault();\r\n        props.resetEvents();\r\n    }\r\n\r\n    const clear = (e) => {\r\n        e.preventDefault();\r\n        props.clear();\r\n    }\r\n    if (props.start) {\r\n        return (\r\n            <div>\r\n                <form class=\"form-inline\">\r\n                    <div class=\"input-group mb-3\">\r\n\r\n                        <select class=\" custom-select\" id=\"eventselect\" onChange={(e) => { setEvent(e.target.value) }}>\r\n                            <option selected>- - Choose Event - -</option>\r\n\r\n                            {props.events.map((event) => {\r\n                                return (\r\n\r\n                                    <option value={event}>   {event} </option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n\r\n\r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"input-group-text btn btn-secondary\" for=\"eventselect\" onClick={addEvent}>Add Event</button>\r\n\r\n                        </div>\r\n                            \r\n\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                    {/* <label for=\"start\">Start date:</label>\r\n\r\n                    <input className=\"date\" type=\"date\" id=\"start\" name=\"trip-start\"\r\n                        min=\"2020-09-26\" max={today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate()} /> */}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Login(props) {\r\n   \r\n\r\n    if (!props.start) {\r\n        return (\r\n            <form onSubmit={() => { props.login() }} className=\"form-box\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n\r\n                <input class=\"form-control\" type=\"password\" onChange={(e) => props.handleSetPass(e.target.value)} />\r\n                <br />\r\n                <button class=\"btn btn-primary mb-2 show-rep-btn\" > show reports</button>\r\n            </form>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/* <button class=\"btn btn-primary mb-2\" onClick={() => { props.logout() }}> Back</button> */}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\n\r\nexport default function Table(props) {\r\n\r\n    const [sortEvents, setSortEvents] = useState(false)\r\n\r\n    const handleSort = (line) => {\r\n        props.sortAppEvents(line)\r\n        setSortEvents(!sortEvents);\r\n    }\r\n\r\n    const handleSortByName = () =>{\r\n        props.sortByName(); \r\n        setSortEvents(!sortEvents);\r\n    }\r\n    \r\n\r\n    if (props.loading) {\r\n        return (\r\n            <div className=\"loading\">\r\n                <ReactLoading type={'spin'} color={\"blue\"} height={'80px'} width={'80px'} />\r\n            </div>\r\n        );\r\n    } else if (props.start) {\r\n        return (\r\n            <div className=\"table-box\">\r\n\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr >\r\n                            <th className=\"ver-th blank-cell\" > <button className=\"btn\" onClick={() => { handleSortByName()}}>⌄</button> </th>\r\n                            {\r\n                                props.data.map((line, index) => {\r\n                                    return (\r\n                                        <th>{line.app}     <span className=\"time\"> {props.getDate(line.day, index)} </span><button className=\"btn\" onClick={() => { handleSort(line) }}>⌄</button>\r\n                                        </th>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {props.events.map((event) => {\r\n                        return (\r\n                            <tr>\r\n\r\n                                <th className=\"ver-th\"     ><span className=\"test\">{props.changeName(event)}</span></th>\r\n                                {\r\n                                    props.data.map((line, index) => {\r\n                                        return (\r\n                                            <td>{line[event]}</td>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        );\r\n                    })\r\n\r\n                    }\r\n\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n            </div>)\r\n    }\r\n}\r\n","import React from 'react'\r\nimport DropDown from './DropDown'\r\n\r\nexport default function TableControls(props) {\r\n    if (props.start && !props.loading ) {\r\n        return (\r\n            <div className=\"table-controls\">\r\n                <button className=\"btn btn-secondary reset-button\" onClick={props.resetEvents}>Reset</button>\r\n                <button className=\"btn btn-danger reset-button\" onClick={props.clearEvents}>Clear All</button>\r\n                <button className=\"btn btn-primary reset-button\" onClick={props.addAll}>Add All</button>\r\n\r\n                <DropDown start={props.tart} loading={props.loading} removeEvent={props.removeEvent} addEvent={props.addEvent} events={props.events} displayedEvents={props.displayedEvents} events={props.events} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\nimport DropDown from './components/DropDown';\r\nimport FilterMenu from './components/FilterMenu';\r\nimport Login from './components/Login';\r\nimport Table from './components/Table';\r\nimport TableControls from './components/TableControls';\r\n\r\n\r\nconst today = Math.floor(Date.now() / 86400000);\r\nconst API_KEY = process.env.REACT_APP_DATA_API_KEY;\r\nconst PASS_KEY = process.env.REACT_APP_PASS_KEY;\r\nconst DEFAULT_EVENTS = [\"PaymentSheetView_appear_NATIVE\", \"app_launch_NATIVE\", \"app_launch_SDK\", \"approve_NATIVE\", \"approve_SDK\", \"fail_NATIVE\", \"fail_SDK\", \"pop_SDK\", \"purchase_NATIVE\", \"purchase_SDK\", \"first_launch\"];\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [start, setStart] = useState(false)\r\n  const [data, setData] = useState([])\r\n  const [order, setOrder] = useState('htl')\r\n  const [pass, setPass] = useState('')\r\n  const [events, setEvents] = useState([])\r\n  const [displayedEvents, setDisplayedEvents] = useState(DEFAULT_EVENTS)\r\n  const [eventsObject, setEventsObject] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const resetEvents = () => {\r\n    setDisplayedEvents(DEFAULT_EVENTS);\r\n  }\r\n  const clearEvents = () => {\r\n    setDisplayedEvents([]);\r\n  }\r\n\r\n  const checkIfChecked = (event) => {\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (event === displayedEvents[i])\r\n        return true\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const sortByName = () => {\r\n    // displayedEvents.sort();\r\n\r\n    displayedEvents.sort(\r\n      function (a, b) {\r\n        if (a.toLowerCase() < b.toLowerCase()) return -1;\r\n        if (a.toLowerCase() > b.toLowerCase()) return 1;\r\n        return 0;\r\n      }\r\n    );\r\n    setDisplayedEvents(displayedEvents);\r\n    console.log(displayedEvents);\r\n\r\n\r\n  }\r\n  const changeName = (n) => {\r\n\r\n    let nameMap = {\r\n      PaymentSheetView_appear_NATIVE: \"Pop Native\",\r\n      app_launch_NATIVE: \"App Launch Native\",\r\n      app_launch_SDK: \"App Launch SDK\",\r\n      approve_NATIVE: \"Approve Native\",\r\n      approve_SDK: \"Approve SDK\",\r\n      fail_NATIVE: \"Fail Native\",\r\n      fail_SDK: \"Fail SDK\",\r\n      pop_SDK: \"Pop SDK\",\r\n      purchase_NATIVE: \"Purchase Native\",\r\n      purchase_SDK: \"Purchase SDK\",\r\n      first_launch: \"Fisrt Launch\"\r\n    }\r\n\r\n    if(!nameMap[n]){\r\n      return n;\r\n    }else{\r\n      return nameMap[n] + \" (\" + n + \")\" ;\r\n    }\r\n    return nameMap[n] || n;\r\n  }\r\n\r\n  const sortAppByValue = (app) => {\r\n    let tmp = \"\";\r\n    if (true) {\r\n      for (let j = 0; j < displayedEvents.length; j++) {\r\n        for (let i = 0; i < displayedEvents.length - 1; i++) {\r\n          if (app[displayedEvents[i]] < app[displayedEvents[i + 1]] || !app[displayedEvents[i]]) {\r\n            tmp = displayedEvents[i];\r\n            displayedEvents[i] = displayedEvents[i + 1];\r\n            displayedEvents[i + 1] = tmp;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let j = 0; j < displayedEvents.length; j++) {\r\n        for (let i = 0; i > displayedEvents.length - 1; i++) {\r\n          if (app[displayedEvents[i]] < app[displayedEvents[i + 1]] || !app[displayedEvents[i + 1]]) {\r\n            tmp = displayedEvents[i];\r\n            displayedEvents[i] = displayedEvents[i + 1];\r\n            displayedEvents[i + 1] = tmp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setDisplayedEvents(displayedEvents);\r\n  }\r\n\r\n  const login = () => {\r\n    if (pass === PASS_KEY) {\r\n      getData();\r\n      setStart(true);\r\n    } else {\r\n      alert(\"wrong passowrd\");\r\n    }\r\n  }\r\n  const logout = () => {\r\n    setStart(false);\r\n    setLoading(false);\r\n    setPass(\"\");\r\n  }\r\n\r\n  const handleSetPass = (p) => {\r\n    setPass(p)\r\n  }\r\n\r\n  async function getData() {\r\n\r\n    let reportsArr = [];\r\n    setLoading(true);\r\n    let lambdaReport = await getDataFromLambda()\r\n    setLoading(false);\r\n    // console.log(lambdaReport)\r\n\r\n    lambdaReport.map((line) => {\r\n      reportsArr = [...reportsArr, line]\r\n    })\r\n    sortRep(reportsArr);\r\n    // daysCheck();\r\n    // console.log(reportsArr);\r\n\r\n    setData(reportsArr);\r\n\r\n    console.log(reportsArr);\r\n\r\n    getEvents(reportsArr);\r\n\r\n\r\n\r\n  }\r\n  async function getDataFromLambda() {\r\n    return fetch(API_KEY)\r\n      .then(data => data.json())\r\n  }\r\n  const handleObjectEvents = (eventsArr) => {\r\n    let newArr = []\r\n    for (let i = 0; i < eventsArr.length; i++) {\r\n      newArr = [...newArr, { label: eventsArr[i], value: eventsArr[i] }]\r\n    }\r\n    setEventsObject(newArr);\r\n  }\r\n\r\n  const getEvents = (d) => {\r\n    let eventsNames = [];\r\n    for (let i = 0; i < d.length; i++) {\r\n\r\n      for (var event in d[i]) {\r\n        let isNew = true;\r\n        for (let j = 0; j < eventsNames.length; j++) {\r\n          if (event === eventsNames[j] || d[i].event === null) {\r\n            isNew = false;\r\n          }\r\n        }\r\n        if (isNew) {\r\n          eventsNames = [...eventsNames, event];\r\n        }\r\n      }\r\n    }\r\n    eventsNames.sort();\r\n    setEvents(eventsNames);\r\n    handleObjectEvents(eventsNames)\r\n  }\r\n  function sortRep(arr) {\r\n    if (order === \"lth\") {\r\n      arr.sort((day1, day2) => {\r\n        if (day1.day < day2.day)\r\n          return -1;\r\n        if (day1.day > day2.day)\r\n          return 1;\r\n      });\r\n    } else if (order === \"htl\") {\r\n      arr.sort((day1, day2) => {\r\n        if (day1.day > day2.day)\r\n          return -1;\r\n        if (day1.day < day2.day)\r\n          return 1;\r\n      });\r\n    }\r\n\r\n  }\r\n  const getDate = (day, index) => {\r\n\r\n    if ((today - day) === 0) {\r\n      return \"Today\"\r\n    }\r\n    else if (today - day === 1) {\r\n      return \"Yesterday\"\r\n    }\r\n    else {\r\n      return new Date(day * 86400000).toLocaleDateString()\r\n    }\r\n  }\r\n  const addEvent = (event) => {\r\n    console.log(event);\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (displayedEvents[i] === event)\r\n        return;\r\n    }\r\n\r\n    setDisplayedEvents([...displayedEvents, event]);\r\n  }\r\n  const removeEvent = (event) => {\r\n    let newArr = []\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (displayedEvents[i] === event)\r\n        continue;\r\n      else\r\n        newArr = [...newArr, displayedEvents[i]];\r\n    }\r\n    setDisplayedEvents(newArr);\r\n  }\r\n  const addAll = () => {\r\n    let newArr = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n      if(events[i] === \"app\" || events[i] === \"day\"){\r\n        continue;\r\n      }else{\r\n        newArr = [...newArr, events[i]];\r\n      }\r\n    }\r\n    setDisplayedEvents(newArr);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n        <h1 onClick={() => { logout() }}> Reports</h1>\r\n        <br /> <br />\r\n        <Login login={login} logout={logout} handleSetPass={handleSetPass} start={start} />\r\n\r\n      </div>\r\n      {/* <FilterMenu eventsObject={eventsObject} displayedEvents={displayedEvents} checkIfChecked={checkIfChecked} today={today} start={start} clear={clearEvents} resetEvents={resetEvents} addEvent={addEvent} events={events} />\r\n       */}\r\n      <TableControls resetEvents={resetEvents} clearEvents={clearEvents} addAll={addAll} start={start} loading={loading} removeEvent={removeEvent} addEvent={addEvent} events={events} displayedEvents={displayedEvents} events={events} />\r\n\r\n      <Table sortByName={sortByName} sortAppEvents={sortAppByValue} loading={loading} changeName={changeName} data={data} getDate={getDate} start={start} events={displayedEvents} />\r\n\r\n\r\n\r\n      <br />\r\n      <br />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}