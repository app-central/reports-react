{"version":3,"sources":["components/DropDown.js","components/FilterMenu.js","components/Login.js","components/Table.js","components/TableControls.js","App.js","reportWebVitals.js","index.js"],"names":["DropDown","props","className","options","events","selectedValues","displayedEvents","onSelect","list","item","addEvent","onRemove","removeEvent","displayValue","style","showCheckbox","isObject","hidePlaceholder","Date","Login","start","onSubmit","login","for","class","type","onChange","e","handleSetPass","target","value","Table","useState","sortEvents","setSortEvents","loading","color","height","width","data","length","onClick","sortByName","map","line","index","app","getDate","day","sortAppEvents","handleSort","event","changeName","TableControls","head","resetEvents","clearEvents","addAll","tart","today","Math","floor","now","API_KEY","process","DEFAULT_EVENTS","App","setStart","setData","order","pass","setPass","setEvents","setDisplayedEvents","setEventsObject","setLoading","apps","setApps","displayedApps","setDisplayedApps","setdisplayedData","ogData","setOgData","generateNewEvents","d","i","pop","app_launch_NATIVE","app_launch_SDK","approve","PaymentSheetView_appear_NATIVE","pop_SDK","purchase","approve_NATIVE","approve_SDK","getApps","newApps","exists","j","updateDispalyedData","resetApps","newDispData","logout","a","reportsArr","getDataFromLambda","lambdaReport","sortRep","getEvents","fetch","then","json","eventsNames","isNew","sort","eventsArr","newArr","label","handleObjectEvents","arr","day1","day2","getData","alert","p","console","log","newDispApps","newData","b","toLowerCase","tmp","n","nameMap","fail_NATIVE","fail_SDK","purchase_NATIVE","purchase_SDK","first_launch","toLocaleDateString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.676896c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport DropdownTreeSelect from 'react-dropdown-tree-select'\r\n\r\n\r\n\r\n\r\nexport default function DropDown(props) {\r\n    const addEvent = (list, item) => {\r\n        \r\n            props.addEvent(item);\r\n\r\n        \r\n    }\r\n    const removeEvent = (list,item) =>{\r\n        props.removeEvent(item);\r\n    }\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <Multiselect className=\"drop-down\"\r\n                options={props.events} // Options to display in the dropdown\r\n                selectedValues={props.displayedEvents} // Preselected value to persist in dropdown\r\n                onSelect={addEvent} // Function will trigger on select event\r\n                onRemove={removeEvent} // Function will trigger on remove event\r\n                displayValue=\"label\" // Property name to display in the dropdown options\r\n                style={ \"max-width:400px\" }\r\n                showCheckbox={true}\r\n                isObject={false}\r\n                hidePlaceholder={false} \r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport DropDown from './DropDown';\r\n\r\nvar today = new Date();\r\nexport default function FilterMenu(props) {\r\n    const [event, setEvent] = useState(\"\")\r\n    let x = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n    // console.log(x);\r\n    const addEvent = (e) => {\r\n        e.preventDefault();\r\n        if (event === \"\" || event === \"- - Choose Event - -\") {\r\n\r\n        } else {\r\n            props.addEvent(event);\r\n\r\n        }\r\n    }\r\n\r\n    const resetEvents = (e) => {\r\n        e.preventDefault();\r\n        props.resetEvents();\r\n    }\r\n\r\n    const clear = (e) => {\r\n        e.preventDefault();\r\n        props.clear();\r\n    }\r\n    if (props.start) {\r\n        return (\r\n            <div>\r\n                <form class=\"form-inline\">\r\n                    <div class=\"input-group mb-3\">\r\n\r\n                        <select class=\" custom-select\" id=\"eventselect\" onChange={(e) => { setEvent(e.target.value) }}>\r\n                            <option selected>- - Choose Event - -</option>\r\n\r\n                            {props.events.map((event) => {\r\n                                return (\r\n\r\n                                    <option value={event}>   {event} </option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n\r\n\r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"input-group-text btn btn-secondary\" for=\"eventselect\" onClick={addEvent}>Add Event</button>\r\n\r\n                        </div>\r\n                            \r\n\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                    {/* <label for=\"start\">Start date:</label>\r\n\r\n                    <input className=\"date\" type=\"date\" id=\"start\" name=\"trip-start\"\r\n                        min=\"2020-09-26\" max={today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate()} /> */}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Login(props) {\r\n   \r\n\r\n    if (!props.start) {\r\n        return (\r\n            <form onSubmit={() => { props.login() }} className=\"form-box\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n\r\n                <input class=\"form-control\" type=\"password\" onChange={(e) => props.handleSetPass(e.target.value)} />\r\n                <br />\r\n                <button class=\"btn btn-primary mb-2 show-rep-btn\" > show reports</button>\r\n            </form>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/* <button class=\"btn btn-primary mb-2\" onClick={() => { props.logout() }}> Back</button> */}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\n\r\nexport default function Table(props) {\r\n\r\n    const [sortEvents, setSortEvents] = useState(false)\r\n\r\n    const handleSort = (line) => {\r\n        props.sortAppEvents(line)\r\n        setSortEvents(!sortEvents);\r\n    }\r\n\r\n    const handleSortByName = () =>{\r\n        props.sortByName(); \r\n        setSortEvents(!sortEvents);\r\n    }\r\n    \r\n\r\n    if (props.loading) {\r\n        return (\r\n            <div className=\"loading\">\r\n                <ReactLoading type={'spin'} color={\"blue\"} height={'80px'} width={'80px'} />\r\n            </div>\r\n        );\r\n    } else if(props.data.length === 0){\r\n        return(\r\n            <div>\r\n            </div>\r\n        )\r\n    }else if (props.start) {\r\n        return (\r\n            <div className=\"table-box\">\r\n\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr >\r\n                            <th className=\"ver-th blank-cell\" > <button className=\"btn\" onClick={() => { handleSortByName()}}>⌄</button> </th>\r\n                            {\r\n                                props.data.map((line, index) => {\r\n                                    return (\r\n                                        <th>{line.app}    <span className=\"time\"> {props.getDate(line.day, index)} </span><button className=\"btn\" onClick={() => { handleSort(line) }}>⌄</button>\r\n                                        </th>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {props.events.map((event) => {\r\n                        return (\r\n                            <tr>\r\n\r\n                                <th className=\"ver-th\"     ><span className=\"test\">{props.changeName(event)}</span></th>\r\n                                {\r\n                                    props.data.map((line, index) => {\r\n                                        return (\r\n                                            <td>{line[event] || \"n/a\"}</td>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        );\r\n                    })\r\n\r\n                    }\r\n\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n            </div>)\r\n    }\r\n}\r\n","import React from 'react'\r\nimport DropDown from './DropDown'\r\n\r\nexport default function TableControls(props) {\r\n    if (props.start && !props.loading ) {\r\n        return (\r\n            \r\n            <div className=\"table-controls\">\r\n            <h3>{props.head}</h3>\r\n                <button className=\"btn btn-secondary reset-button\" onClick={props.resetEvents}>Reset</button>\r\n                <button className=\"btn btn-danger reset-button\" onClick={props.clearEvents}>Clear All</button>\r\n                <button className=\"btn btn-primary reset-button\" onClick={props.addAll}>Add All</button>\r\n\r\n                <DropDown start={props.tart} loading={props.loading} removeEvent={props.removeEvent} addEvent={props.addEvent} events={props.events} displayedEvents={props.displayedEvents} events={props.events} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\nimport FilterMenu from './components/FilterMenu';\r\nimport Login from './components/Login';\r\nimport Table from './components/Table';\r\nimport TableControls from './components/TableControls';\r\n\r\nvar today2 = new Date();\r\n// console.log(tday);\r\nconst today = Math.floor(Date.now() / 86400000);\r\nconst API_KEY = process.env.REACT_APP_DATA_API_KEY;\r\nconst PASS_KEY = process.env.REACT_APP_PASS_KEY;\r\nconst DEFAULT_EVENTS = [\"first_launch\",\r\n  \"app_launch_NATIVE\",\r\n  \"app_launch_SDK\",\r\n  \"thumbnail_tap_NATIVE\",\r\n  \"thumbnail_tap_SDK\",\r\n  \"PaymentSheetView_appear_NATIVE\",\r\n  \"pop/app_launch_NATIVE\",\r\n  \"pop_SDK\",\r\n  \"pop/app_launch_SDK\",\r\n  \"approve_NATIVE\",\r\n  \"approve/PaymentSheetView_appear_NATIVE\",\r\n  \"approve_SDK\",\r\n  \"approve/pop_SDK\",\r\n  \"purchase_NATIVE\",\r\n  \"purchase/approve_NATIVE\",\r\n  \"purchase_SDK\",\r\n  \"purchase/approve_SDK\",\r\n  \"fail_NATIVE\",\r\n  \"fail_SDK\",\r\n];\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [start, setStart] = useState(false)\r\n  const [data, setData] = useState([])\r\n  const [order, setOrder] = useState('htl')\r\n  const [pass, setPass] = useState('')\r\n  const [events, setEvents] = useState([])\r\n  const [displayedEvents, setDisplayedEvents] = useState(DEFAULT_EVENTS)\r\n  const [eventsObject, setEventsObject] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [apps, setApps] = useState([])\r\n  const [displayedApps, setDisplayedApps] = useState([])\r\n  const [displayedData, setdisplayedData] = useState([])\r\n  const [ogData, setOgData] = useState([])\r\n\r\n\r\n  const generateNewEvents = (d) => {\r\n    for (let i = 0; i < d.length; i++) {\r\n      d[i][\"pop/app_launch_NATIVE\"] = (Math.floor((d[i].pop / d[i].app_launch_NATIVE) * 100)) + \"%\";\r\n      d[i][\"pop/app_launch_SDK\"] = (Math.floor((d[i].pop / d[i].app_launch_SDK) * 100)) + \"%\";\r\n      d[i][\"approve/PaymentSheetView_appear_NATIVE\"] = (Math.floor((d[i].approve / d[i].PaymentSheetView_appear_NATIVE) * 100)) + \"%\";\r\n      d[i][\"approve/pop_SDK\"] = (Math.floor((d[i].approve / d[i].pop_SDK) * 100)) + \"%\";\r\n      d[i][\"purchase/approve_NATIVE\"] = (Math.floor((d[i].purchase / d[i].approve_NATIVE) * 100)) + \"%\";\r\n      d[i][\"purchase/approve_SDK\"] = Math.floor((d[i].purchase / d[i].approve_SDK) * 100) + \"%\";\r\n\r\n    }\r\n    setData(d);\r\n  }\r\n\r\n  const getToday = () => {\r\n\r\n    let day = today2.getDate().toString();\r\n    if (day.length === 1) {\r\n      day = \"0\" + day;\r\n    }\r\n    let month = (today2.getMonth() + 1).toString();\r\n\r\n    if (month.length === 1) {\r\n      month = \"0\" + month;\r\n    }\r\n\r\n    return today2.getFullYear() + \"-\" + (month) + \"-\" + day;\r\n  }\r\n\r\n  const resetEvents = () => {\r\n    setDisplayedEvents(DEFAULT_EVENTS);\r\n  }\r\n  const clearEvents = () => {\r\n    setDisplayedEvents([]);\r\n  }\r\n  const getApps = (d) => {\r\n    let newApps = [];\r\n    let exists = false;\r\n    for (let i = 0; i < d.length; i++) {\r\n      for (let j = 0; j < newApps.length; j++) {\r\n        if (d[i].app === newApps[j]) {\r\n          exists = true;\r\n          break;\r\n        }\r\n\r\n      }\r\n      if (!exists)\r\n        newApps = [...newApps, d[i].app];\r\n      exists = false;\r\n    }\r\n    setApps(newApps);\r\n    setDisplayedApps(newApps);\r\n    updateDispalyedData(d);\r\n\r\n  }\r\n  const resetApps = () => {\r\n    setData(ogData);\r\n    getApps(ogData);\r\n  }\r\n  const updateDispalyedData = () => {\r\n\r\n    let newDispData = []\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let j = 0; j < displayedApps.length; j++) {\r\n        if (data[i].app === displayedApps[j]) {\r\n          newDispData = [...newDispData, data[i]]\r\n        }\r\n      }\r\n    }\r\n    setdisplayedData(newDispData);\r\n  }\r\n  const removeApp = (app) => {\r\n    let newDispApps = [];\r\n    for (let i = 0; i < displayedApps.length; i++) {\r\n      if (displayedApps[i] === app) {\r\n        continue;\r\n      } else {\r\n        newDispApps = [...newDispApps, displayedApps[i]];\r\n      }\r\n    }\r\n    setDisplayedApps(newDispApps);\r\n    let newData = []\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].app === app)\r\n        continue;\r\n      else\r\n        newData = [...newData, data[i]];\r\n    }\r\n    setData(newData);\r\n  }\r\n  const clearApps = () => {\r\n\r\n    setData([]);\r\n    setDisplayedApps([]);\r\n  }\r\n  const addApp = (app) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].app === app)\r\n        return\r\n    }\r\n    let newData = []\r\n    for (let i = 0; i < data.length; i++) {\r\n      newData = [...newData, data[i]]\r\n\r\n    }\r\n    for (let i = 0; i < ogData.length; i++) {\r\n      if (ogData[i].app === app) {\r\n        newData = [...newData, ogData[i]];\r\n      }\r\n    }\r\n    sortRep(newData);\r\n\r\n    setData(newData)\r\n\r\n    setDisplayedApps([...displayedApps, app]);\r\n  }\r\n\r\n  const checkIfChecked = (event) => {\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (event === displayedEvents[i])\r\n        return true\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const sortByName = () => {\r\n    // displayedEvents.sort();\r\n\r\n    displayedEvents.sort(\r\n      function (a, b) {\r\n        if (a.toLowerCase() < b.toLowerCase()) return -1;\r\n        if (a.toLowerCase() > b.toLowerCase()) return 1;\r\n        return 0;\r\n      }\r\n    );\r\n    setDisplayedEvents(displayedEvents);\r\n    console.log(displayedEvents);\r\n\r\n\r\n  }\r\n  const changeName = (n) => {\r\n\r\n    let nameMap = {\r\n      PaymentSheetView_appear_NATIVE: \"Pop Native\",\r\n      app_launch_NATIVE: \"App Launch Native\",\r\n      app_launch_SDK: \"App Launch SDK\",\r\n      approve_NATIVE: \"Approve Native\",\r\n      approve_SDK: \"Approve SDK\",\r\n      fail_NATIVE: \"Fail Native\",\r\n      fail_SDK: \"Fail SDK\",\r\n      pop_SDK: \"Pop SDK\",\r\n      purchase_NATIVE: \"Purchase Native\",\r\n      purchase_SDK: \"Purchase SDK\",\r\n      first_launch: \"Fisrt Launch\",\r\n      [\"pop/app_launch_NATIVE\"]: \"Pop / App Launch Native\",\r\n      [\"pop/app_launch_SDK\"]: \"Pop / app Launch SDK\",\r\n      [\"approve/PaymentSheetView_appear_NATIVE\"]: \"Approve / Pop Native\",\r\n      [\"approve/pop_SDK\"]: \"Approve / Pop SDK\",\r\n      [\"purchase/approve_NATIVE\"]: \"Purchase / Approve Native\",\r\n      [\"purchase/approve_SDK\"]: \"Purchase / Approve SDK\"\r\n\r\n\r\n\r\n    }\r\n\r\n    if (!nameMap[n]) {\r\n      return n;\r\n    } else {\r\n      return nameMap[n] + \" (\" + n + \")\";\r\n    }\r\n    return nameMap[n] || n;\r\n  }\r\n\r\n  const sortAppByValue = (app) => {\r\n    let tmp = \"\";\r\n    if (true) {\r\n      for (let j = 0; j < displayedEvents.length; j++) {\r\n        for (let i = 0; i < displayedEvents.length - 1; i++) {\r\n          if (app[displayedEvents[i]] < app[displayedEvents[i + 1]] || !app[displayedEvents[i]]) {\r\n            tmp = displayedEvents[i];\r\n            displayedEvents[i] = displayedEvents[i + 1];\r\n            displayedEvents[i + 1] = tmp;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let j = 0; j < displayedEvents.length; j++) {\r\n        for (let i = 0; i > displayedEvents.length - 1; i++) {\r\n          if (app[displayedEvents[i]] < app[displayedEvents[i + 1]] || !app[displayedEvents[i + 1]]) {\r\n            tmp = displayedEvents[i];\r\n            displayedEvents[i] = displayedEvents[i + 1];\r\n            displayedEvents[i + 1] = tmp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setDisplayedEvents(displayedEvents);\r\n  }\r\n\r\n  const login = () => {\r\n    if (pass === PASS_KEY) {\r\n      getData();\r\n      setStart(true);\r\n    } else {\r\n      alert(\"wrong passowrd\");\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    setStart(false);\r\n    setLoading(false);\r\n    setPass(\"\");\r\n  }\r\n\r\n  const handleSetPass = (p) => {\r\n    setPass(p)\r\n  }\r\n\r\n  async function getData() {\r\n\r\n    let reportsArr = [];\r\n    setLoading(true);\r\n    let lambdaReport = await getDataFromLambda()\r\n    setLoading(false);\r\n    // console.log(lambdaReport)\r\n\r\n    lambdaReport.map((line) => {\r\n      reportsArr = [...reportsArr, line]\r\n    })\r\n    sortRep(reportsArr);\r\n    // daysCheck();\r\n    // console.log(reportsArr);\r\n\r\n    setData(reportsArr);\r\n    setOgData(reportsArr);\r\n    getApps(reportsArr);\r\n    generateNewEvents(reportsArr);\r\n\r\n    getEvents(reportsArr);\r\n\r\n\r\n  }\r\n  async function getDataFromLambda() {\r\n    return fetch(API_KEY)\r\n      .then(data => data.json())\r\n  }\r\n  const handleObjectEvents = (eventsArr) => {\r\n    let newArr = []\r\n    for (let i = 0; i < eventsArr.length; i++) {\r\n      newArr = [...newArr, { label: eventsArr[i], value: eventsArr[i] }]\r\n    }\r\n    setEventsObject(newArr);\r\n  }\r\n  const getEvents = (d) => {\r\n    let eventsNames = [];\r\n    for (let i = 0; i < d.length; i++) {\r\n\r\n      for (var event in d[i]) {\r\n        let isNew = true;\r\n        for (let j = 0; j < eventsNames.length; j++) {\r\n          if (event === eventsNames[j] || d[i].event === null) {\r\n            isNew = false;\r\n          }\r\n        }\r\n        if (isNew) {\r\n          eventsNames = [...eventsNames, event];\r\n        }\r\n      }\r\n    }\r\n    eventsNames.sort();\r\n    setEvents(eventsNames);\r\n    handleObjectEvents(eventsNames)\r\n  }\r\n  function sortRep(arr) {\r\n    if (order === \"lth\") {\r\n      arr.sort((day1, day2) => {\r\n        if (day1.day < day2.day)\r\n          return -1;\r\n        if (day1.day > day2.day)\r\n          return 1;\r\n      });\r\n    } else if (order === \"htl\") {\r\n      arr.sort((day1, day2) => {\r\n        if (day1.day > day2.day)\r\n          return -1;\r\n        if (day1.day < day2.day)\r\n          return 1;\r\n      });\r\n    }\r\n\r\n  }\r\n  const getDate = (day, index) => {\r\n\r\n    if ((today - day) === 0) {\r\n      return \"Today\"\r\n    }\r\n    else if (today - day === 1) {\r\n      return \"Yesterday\"\r\n    }\r\n    else {\r\n      return new Date(day * 86400000).toLocaleDateString()\r\n    }\r\n  }\r\n  const addEvent = (event) => {\r\n    console.log(event);\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (displayedEvents[i] === event)\r\n        return;\r\n    }\r\n\r\n    setDisplayedEvents([...displayedEvents, event]);\r\n  }\r\n  const removeEvent = (event) => {\r\n    let newArr = []\r\n    for (let i = 0; i < displayedEvents.length; i++) {\r\n      if (displayedEvents[i] === event)\r\n        continue;\r\n      else\r\n        newArr = [...newArr, displayedEvents[i]];\r\n    }\r\n    setDisplayedEvents(newArr);\r\n  }\r\n  const addAll = () => {\r\n    let newArr = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n      if (events[i] === \"app\" || events[i] === \"day\") {\r\n        continue;\r\n      } else {\r\n        newArr = [...newArr, events[i]];\r\n      }\r\n    }\r\n    setDisplayedEvents(newArr);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <div className=\"header\">\r\n        <h1 onClick={() => { logout() }}> Reports</h1>\r\n        <br /> <br />\r\n        <Login login={login} logout={logout} handleSetPass={handleSetPass} start={start} />\r\n\r\n      </div>\r\n      {/* <FilterMenu eventsObject={eventsObject} displayedEvents={displayedEvents} checkIfChecked={checkIfChecked} today={today} start={start} clear={clearEvents} resetEvents={resetEvents} addEvent={addEvent} events={events} />\r\n       */}\r\n      {/* <label for=\"start\">From:</label>\r\n\r\n      <input className=\"date\" type=\"date\" id=\"start\" name=\"trip-start\"\r\n        min=\"2020-09-26\" max={getToday()} />\r\n      <label for=\"start\">To:</label>\r\n\r\n      <input className=\"date\" type=\"date\" id=\"start\" name=\"trip-start\"\r\n        min=\"2020-09-26\" max={getToday()} /> */}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <TableControls head={\"Events\"} resetEvents={resetEvents} clearEvents={clearEvents} addAll={addAll} start={start} loading={loading} removeEvent={removeEvent} addEvent={addEvent} events={events} displayedEvents={displayedEvents} events={events} />\r\n\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <TableControls head={\"Apps\"} resetEvents={resetApps} clearEvents={clearApps} addAll={resetApps} start={start} loading={loading} removeEvent={removeApp} addEvent={addApp} events={apps} displayedEvents={displayedApps} />\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Table sortByName={sortByName} sortAppEvents={sortAppByValue} loading={loading} changeName={changeName} data={data} getDate={getDate} start={start} events={displayedEvents} />\r\n\r\n\r\n\r\n      <br />\r\n      <br />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}