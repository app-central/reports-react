{"version":3,"sources":["components/Login.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","start","class","onClick","logout","onSubmit","login","className","for","type","onChange","e","handleSetPass","target","value","Table","data","map","line","index","app","getDate","day","PaymentSheetView_appear_NATIVE","app_launch_NATIVE","app_launch_SDK","approve_NATIVE","approve_SDK","fail_NATIVE","fail_SDK","pop_SDK","purchase_NATIVE","purchase_SDK","first_launch","today","Math","floor","Date","now","API_KEY","process","App","useState","setStart","setData","order","pass","setPass","a","reportsArr","getDataFromLambda","sortRep","fetch","then","json","arr","sort","day1","day2","getData","alert","p","toLocaleDateString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c1d04eb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Login(props) {\r\n\r\n    if (!props.start) {\r\n        return (\r\n            <form onSubmit={() => { props.login() }} className=\"form-box\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n\r\n                <input class=\"form-control\" type=\"password\" onChange={(e) => props.handleSetPass(e.target.value)} />\r\n                <br />\r\n                <button class=\"btn btn-primary mb-2\" > show reports</button>\r\n            </form>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <button class=\"btn btn-primary mb-2\" onClick={() => { props.logout() }}> log out</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Table(props) {\r\n    if (props.start) {\r\n        return (\r\n            <div>\r\n\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                        <tr>\r\n                            <th></th>\r\n                            {\r\n                                props.data.map((line, index) => {\r\n                                    return (\r\n                                        <th>{line.app} <span className=\"time\"> {props.getDate(line.day, index)}</span>\r\n                                        </th>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tr>\r\n                        <th>PaymentSheetView_appear_NATIVE</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.PaymentSheetView_appear_NATIVE}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>app_launch_NATIVE</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.app_launch_NATIVE}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>app_launch_SDK</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.app_launch_SDK}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>approve_NATIVE</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.approve_NATIVE}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>approve_SDK</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.approve_SDK}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>fail_NATIVE</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.fail_NATIVE}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>fail_SDK</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.fail_SDK}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>pop_SDK</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.pop_SDK}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>purchase_NATIVE</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.purchase_NATIVE}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>purchase_SDK</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.purchase_SDK}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <th>first_launch</th>\r\n                        {\r\n                            props.data.map((line, index) => {\r\n                                return (\r\n                                    <td>{line.first_launch}</td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n\r\n                </table>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\nimport Login from './components/Login';\r\nimport Table from './components/Table';\r\n\r\n\r\nconst today = Math.floor(Date.now() / 86400000);\r\nconst API_KEY = process.env.REACT_APP_DATA_API_KEY;\r\nconst PASS_KEY = process.env.REACT_APP_PASS_KEY;\r\n\r\n\r\nfunction App() {\r\n\r\n  const [start, setStart] = useState(false)\r\n  const [data, setData] = useState([])\r\n  const [order, setOrder] = useState('htl')\r\n  // const [dates, setDates] = useState([])\r\n  const [pass, setPass] = useState('')\r\n\r\n\r\n  const login = () => {\r\n    if (pass === PASS_KEY) {\r\n      getData();\r\n      setStart(true);\r\n    } else {\r\n      alert(\"wrong passowrd\");\r\n    }\r\n  }\r\n  const logout = () =>{\r\n    setStart(false)\r\n    setPass(\"\");\r\n  }\r\n\r\n  const handleSetPass = (p) =>{\r\n    setPass(p)\r\n  }\r\n\r\n  async function getData() {\r\n\r\n    let reportsArr = [];\r\n\r\n    let lambdaReport = await getDataFromLambda()\r\n\r\n    // console.log(lambdaReport)\r\n\r\n    lambdaReport.map((line) => {\r\n      reportsArr = [...reportsArr, line]\r\n    })\r\n    sortRep(reportsArr);\r\n    // daysCheck();\r\n    setData(reportsArr);\r\n\r\n\r\n  }\r\n\r\n  async function getDataFromLambda() {\r\n    return fetch(API_KEY)\r\n      .then(data => data.json())\r\n  }\r\n\r\n\r\n  function sortRep(arr) {\r\n    if (order === \"lth\") {\r\n      arr.sort((day1, day2) => {\r\n        if (day1.day < day2.day)\r\n          return -1;\r\n        if (day1.day > day2.day)\r\n          return 1;\r\n      });\r\n    } else if (order === \"htl\") {\r\n      arr.sort((day1, day2) => {\r\n        if (day1.day > day2.day)\r\n          return -1;\r\n        if (day1.day < day2.day)\r\n          return 1;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // const daysCheck = () =>{\r\n  //   let newDates = [];\r\n\r\n  //   let lastDate = 0;\r\n  //   for (let i = 0; i < data.length; i++) {\r\n  //     if(data[i].date === lastDate){\r\n  //       lastDate = data[i].date;\r\n  //       newDates = [...newDates, i]     \r\n  //      }else{\r\n  //       continue;\r\n  //     }\r\n  //   }\r\n  //   setDates(newDates);\r\n  // }\r\n\r\n\r\n\r\n  const getDate = (day, index) => {\r\n    // for (let i = 0; i < dates.length; i++) {\r\n    //   if(dates[i] == index){\r\n    //     return \"\";\r\n    //   }\r\n    // }\r\n    //  if(day === dates){\r\n\r\n    //     return \"\";\r\n    //  }else{\r\n\r\n    //  }\r\n\r\n\r\n\r\n    if ((today - day) === 0) {\r\n      return \"Today\"\r\n\r\n    }\r\n    else if (today - day === 1) {\r\n\r\n      return \"Yesterday\"\r\n\r\n    }\r\n    else {\r\n\r\n      return new Date(day * 86400000).toLocaleDateString()\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1> Reports</h1>\r\n     <Login login={login} logout={logout} handleSetPass={handleSetPass} start={start} />\r\n\r\n      <br />\r\n      <br />\r\n\r\n        <Table data={data} getDate={getDate}  start={start} />\r\n     \r\n\r\n      \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}